%%%% Time-stamp: <2012-08-20 17:41:39 vk>

%% example text content
%% scrartcl and scrreprt starts with section, subsection, subsubsection, ...
%% scrbook starts with part (optional), chapter, section, ...
\chapter{Motivation}

The motivation for this project is the increasing complexity of modern car systems. The amount of integrated control units in automotive 
systems these days tends to go beyond 80. The resulting energy consumption for the electrical components in such a system sums up to 2,5 kW. 
This grounds the decision of the automotive industry to deal with its own energy management of these components. Considering the number of 
control units and their energy consumption an effective handling of these units seems inevitable. Since the knowledge about the fundamental 
functionality of control units is kept with the manufacturer, serious knowledge deficit surfaces regarding control units from the perspective 
of a common service mechanic. Thus leading to a dependency on expensive information and/or tools provided by the manufacturer of the automobile.
The car service shop is forced to rely on those tools. If suspicion of a fault in a control unit arises it is common practice to change the whole 
unit to resolve this suspicion rather than fixing the real cause of the actual error.
On the other hand this opens possibilities for the manufacturer to keep his income over development periods high. Since knowledge about the 
specifics or the right protocols is restricted communication with the full functionality extent giving automotive manufacturers the chance to 
sell those protocols or a service for diagnosing, keeping their income high.
After discovering that there are standards defining most of the diagnostic trouble codes (DTCs) and the possibility to request those with 
hardware available at an economic price it seems reasonable to develop an open source software implementing those functionalities. Further 
than just requesting DTCs the software is meant to entail ELM327 features as well. 

\section{Market Analysis of Existing OBD Tools}
%% vim:foldmethod=expr
%% vim:fde=getline(v\:lnum)=~'^%%%%\ .\\+'?'>1'\:'='
%%% Local Variables: 
%%% mode: latex
%%% mode: auto-fill
%%% mode: flyspell
%%% eval: (ispell-change-dictionary "en_US")
%%% TeX-master: "main"
%%% End: 
